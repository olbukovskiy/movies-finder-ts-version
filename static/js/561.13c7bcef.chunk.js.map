{"version":3,"file":"static/js/561.13c7bcef.chunk.js","mappings":"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","sources":["components/CastList/CastList.styled.jsx","components/ReviewsListItem/ReviewsListItem.styled.jsx","components/ReviewsListItem/ReviewsListItem.tsx","components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.tsx","components/Reviews/Reviews.tsx","components/services/API.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CastCatalogue = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100% - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n  grid-gap: 18px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\nexport const CastCatalogueTitle = styled.h2`\r\n  text-align: center;\r\n  font-size: 28px;\r\n  margin-bottom: 18px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ReviewListItem = styled.li`\r\n  padding: 6px 12px;\r\n`;\r\n\r\nexport const ReviewListItemTitle = styled.h3`\r\n  font-size: 24px;\r\n  margin-bottom: 18px;\r\n`;\r\n","import { IReview } from '../../types';\r\n\r\nimport { ReviewListItemTitle } from './ReviewsListItem.styled';\r\nimport { ReviewListItem } from './ReviewsListItem.styled';\r\nexport const ReviewsListItem: React.FunctionComponent<{ review: IReview }> = ({\r\n  review,\r\n}) => {\r\n  return (\r\n    <ReviewListItem>\r\n      <ReviewListItemTitle>Author: {review.author}</ReviewListItemTitle>\r\n      <p>{review.content}</p>\r\n    </ReviewListItem>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ReviewList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100% - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(768px, 1fr));\r\n  grid-gap: 18px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n`;\r\n","import { ReviewsListItem } from '../ReviewsListItem/ReviewsListItem';\r\nimport { ReviewList } from './ReviewsList.styled';\r\nimport { CastCatalogueTitle } from '../CastList/CastList.styled';\r\nimport { IReview } from '../../types';\r\n\r\nexport const ReviewsList: React.FunctionComponent<{ reviews: IReview[] }> = ({\r\n  reviews,\r\n}) => {\r\n  return (\r\n    <>\r\n      <CastCatalogueTitle>Reviews</CastCatalogueTitle>\r\n      <ReviewList>\r\n        {reviews.map(review => {\r\n          return <ReviewsListItem key={review.author} review={review} />;\r\n        })}\r\n      </ReviewList>\r\n    </>\r\n  );\r\n};\r\n","import { Fragment, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { SearchMoviesAPI } from '../services/API';\r\nimport { IReview } from '../../types';\r\nimport { ReviewsList } from '../ReviewsList/ReviewsList';\r\n\r\nconst MoviesAPI = new SearchMoviesAPI();\r\n\r\nexport const Reviews: React.FunctionComponent = () => {\r\n  const [reviews, setReviews] = useState<IReview[]>([]);\r\n  const { movieId } = useParams<{ movieId: string }>();\r\n\r\n  useEffect(() => {\r\n    MoviesAPI.searchMovieReviews(movieId).then(resolve =>\r\n      setReviews(resolve!.data.results)\r\n    );\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {reviews.length === 0 && (\r\n        <div>We don't have any reviews for this movie</div>\r\n      )}\r\n      {reviews.length > 0 && (\r\n        <div>\r\n          <ReviewsList reviews={reviews} />\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport { IGenre } from '../../types';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst KEY = '9d6e6ee2eca71a277d41288e53d88a97';\r\n\r\nexport class SearchMoviesAPI<T extends string, U extends number> {\r\n  searchTrendingMovies = async (page: T) => {\r\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovies = async (page: U, searchQuery: T) => {\r\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovieDetails = async (movieId: T) => {\r\n    const url = `movie/${movieId}?api_key=${KEY}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovieCredits = async (movieId: T | undefined) => {\r\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\r\n    if (typeof movieId === 'string') {\r\n      try {\r\n        const response = await axios.get(url);\r\n        return response;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  searchMovieReviews = async (movieId: T | undefined) => {\r\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\r\n    if (typeof movieId === 'string') {\r\n      try {\r\n        const response = await axios.get(url);\r\n        return response;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  searchGenres = async () => {\r\n    const url = `genre/movie/list?api_key=${KEY}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function titleOptimizer(title: string, name: string) {\r\n  if (title) {\r\n    return title;\r\n  }\r\n\r\n  if (name) {\r\n    return name;\r\n  }\r\n\r\n  return 'The best film in your life! :)';\r\n}\r\n\r\nexport function dateOptimizer(releaseDate: string, firstDate: string) {\r\n  if (releaseDate) {\r\n    return releaseDate.slice(0, 4);\r\n  }\r\n\r\n  if (firstDate) {\r\n    return firstDate.slice(0, 4);\r\n  }\r\n\r\n  return 'Coming soon! :)';\r\n}\r\n\r\nexport function picturePathPlace(path: string) {\r\n  if (path == null) {\r\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\r\n  }\r\n\r\n  return `https://image.tmdb.org/t/p/w500${path}`;\r\n}\r\n\r\nexport function findGenres(genres: IGenre[], genreIds: number[]) {\r\n  const genresArray = [];\r\n\r\n  if (!genreIds) {\r\n    return 'Other';\r\n  }\r\n\r\n  for (let id of genreIds) {\r\n    let item = genres.find(genre => genre.id === id);\r\n    if (item === undefined) {\r\n      continue;\r\n    } else {\r\n      genresArray.push(item.name);\r\n    }\r\n  }\r\n\r\n  if (genresArray.length === 0) {\r\n    genresArray.push('Other');\r\n  }\r\n\r\n  if (genresArray.length > 3) {\r\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\r\n  }\r\n\r\n  return genresArray.join(', ');\r\n}\r\n\r\nexport function movieDetailsGenres(genres: IGenre[]) {\r\n  const genresArray = [];\r\n\r\n  for (let genre of genres) {\r\n    genresArray.push(genre.name);\r\n  }\r\n\r\n  if (genresArray.length === 0) {\r\n    return 'Other';\r\n  }\r\n\r\n  if (genresArray.length > 3) {\r\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\r\n  }\r\n\r\n  return genresArray.join(', ');\r\n}\r\n"],"names":["CastCatalogue","styled","CastCatalogueTitle","ReviewListItem","ReviewListItemTitle","ReviewsListItem","review","author","content","ReviewList","ReviewsList","reviews","map","MoviesAPI","SearchMoviesAPI","Reviews","useState","setReviews","movieId","useParams","useEffect","searchMovieReviews","then","resolve","data","results","Fragment","length","axios","KEY","searchTrendingMovies","page","url","response","console","log","searchMovies","searchQuery","searchMovieDetails","searchMovieCredits","searchGenres","titleOptimizer","title","name","dateOptimizer","releaseDate","firstDate","slice","picturePathPlace","path","findGenres","genres","genreIds","genresArray","id","item","find","genre","undefined","push","join","movieDetailsGenres"],"sourceRoot":""}
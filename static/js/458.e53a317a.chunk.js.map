{"version":3,"file":"static/js/458.e53a317a.chunk.js","mappings":"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","sources":["components/CastList/CastList.styled.jsx","components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.tsx","components/CastList/CastList.tsx","components/Cast/Cast.tsx","components/services/API.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CastCatalogue = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100% - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n  grid-gap: 18px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\nexport const CastCatalogueTitle = styled.h2`\r\n  text-align: center;\r\n  font-size: 28px;\r\n  margin-bottom: 18px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CastThumb = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: relative;\r\n  margin-bottom: ${props => props.theme.space[4]}px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const CastItemPictureThumb = styled.div`\r\n  position: relative;\r\n  height: 370px;\r\n`;\r\n\r\nexport const CastItemTextThumb = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  gap: ${props => props.theme.space[1]}px;\r\n  padding: 6px 12px;\r\n  flex-grow: 1;\r\n\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n\r\n  border-left: 1px solid #eee;\r\n  border-right: 1px solid #eee;\r\n  border-bottom: 1px solid #eee;\r\n`;\r\n","import { ICastItem } from '../../types';\r\nimport { picturePathPlace } from '../services/API';\r\nimport {\r\n  CastItemPictureThumb,\r\n  CastItemTextThumb,\r\n  CastThumb,\r\n} from './CastItem.styled';\r\n\r\nexport const CastItem: React.FunctionComponent<ICastItem> = ({\r\n  name,\r\n  character,\r\n  profile_path,\r\n}) => {\r\n  return (\r\n    <CastThumb>\r\n      <CastItemPictureThumb>\r\n        <img src={picturePathPlace(profile_path)} alt={name} />\r\n      </CastItemPictureThumb>\r\n      <CastItemTextThumb>\r\n        <p>Name: {name}</p>\r\n        <p>Character: {character}</p>\r\n      </CastItemTextThumb>\r\n    </CastThumb>\r\n  );\r\n};\r\n","import { CastItem } from '../CastItem/CastItem';\r\nimport { ICastItem } from '../../types';\r\nimport { CastCatalogue, CastCatalogueTitle } from './CastList.styled';\r\n\r\nexport const CastList: React.FunctionComponent<{ cast: ICastItem[] }> = ({\r\n  cast,\r\n}) => {\r\n  return (\r\n    <>\r\n      <CastCatalogueTitle>Full cast</CastCatalogueTitle>\r\n      <CastCatalogue>\r\n        {cast.map(({ name, character, profile_path }) => {\r\n          return (\r\n            <CastItem\r\n              key={name}\r\n              name={name}\r\n              character={character}\r\n              profile_path={profile_path}\r\n            />\r\n          );\r\n        })}\r\n      </CastCatalogue>\r\n    </>\r\n  );\r\n};\r\n","import { Fragment, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ICastItem } from '../../types';\r\n\r\nimport { CastList } from '../CastList/CastList';\r\nimport { SearchMoviesAPI } from '../services/API';\r\n\r\nconst MoviesAPI = new SearchMoviesAPI();\r\n\r\nexport const Cast = () => {\r\n  const [cast, setCast] = useState<ICastItem[]>([]);\r\n  const { movieId } = useParams<{ movieId: string }>();\r\n\r\n  useEffect(() => {\r\n    MoviesAPI.searchMovieCredits(movieId).then(resolve => {\r\n      setCast(resolve!.data.cast);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {cast.length === 0 && (\r\n        <div>We don't have any information about this movie crew</div>\r\n      )}\r\n      {cast.length > 0 && <CastList cast={cast} />}\r\n    </Fragment>\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport { IGenre } from '../../types';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst KEY = '9d6e6ee2eca71a277d41288e53d88a97';\r\n\r\nexport class SearchMoviesAPI<T extends string, U extends number> {\r\n  searchTrendingMovies = async (page: T) => {\r\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovies = async (page: U, searchQuery: T) => {\r\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovieDetails = async (movieId: T) => {\r\n    const url = `movie/${movieId}?api_key=${KEY}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovieCredits = async (movieId: T | undefined) => {\r\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\r\n    if (typeof movieId === 'string') {\r\n      try {\r\n        const response = await axios.get(url);\r\n        return response;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  searchMovieReviews = async (movieId: T | undefined) => {\r\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\r\n    if (typeof movieId === 'string') {\r\n      try {\r\n        const response = await axios.get(url);\r\n        return response;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  searchGenres = async () => {\r\n    const url = `genre/movie/list?api_key=${KEY}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function titleOptimizer(title: string, name: string) {\r\n  if (title) {\r\n    return title;\r\n  }\r\n\r\n  if (name) {\r\n    return name;\r\n  }\r\n\r\n  return 'The best film in your life! :)';\r\n}\r\n\r\nexport function dateOptimizer(releaseDate: string, firstDate: string) {\r\n  if (releaseDate) {\r\n    return releaseDate.slice(0, 4);\r\n  }\r\n\r\n  if (firstDate) {\r\n    return firstDate.slice(0, 4);\r\n  }\r\n\r\n  return 'Coming soon! :)';\r\n}\r\n\r\nexport function picturePathPlace(path: string) {\r\n  if (path == null) {\r\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\r\n  }\r\n\r\n  return `https://image.tmdb.org/t/p/w500${path}`;\r\n}\r\n\r\nexport function findGenres(genres: IGenre[], genreIds: number[]) {\r\n  const genresArray = [];\r\n\r\n  if (!genreIds) {\r\n    return 'Other';\r\n  }\r\n\r\n  for (let id of genreIds) {\r\n    let item = genres.find(genre => genre.id === id);\r\n    if (item === undefined) {\r\n      continue;\r\n    } else {\r\n      genresArray.push(item.name);\r\n    }\r\n  }\r\n\r\n  if (genresArray.length === 0) {\r\n    genresArray.push('Other');\r\n  }\r\n\r\n  if (genresArray.length > 3) {\r\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\r\n  }\r\n\r\n  return genresArray.join(', ');\r\n}\r\n\r\nexport function movieDetailsGenres(genres: IGenre[]) {\r\n  const genresArray = [];\r\n\r\n  for (let genre of genres) {\r\n    genresArray.push(genre.name);\r\n  }\r\n\r\n  if (genresArray.length === 0) {\r\n    return 'Other';\r\n  }\r\n\r\n  if (genresArray.length > 3) {\r\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\r\n  }\r\n\r\n  return genresArray.join(', ');\r\n}\r\n"],"names":["CastCatalogue","styled","CastCatalogueTitle","CastThumb","props","theme","space","CastItemPictureThumb","CastItemTextThumb","CastItem","name","character","profile_path","src","picturePathPlace","alt","CastList","cast","map","MoviesAPI","SearchMoviesAPI","Cast","useState","setCast","movieId","useParams","useEffect","searchMovieCredits","then","resolve","data","Fragment","length","axios","KEY","searchTrendingMovies","page","url","response","console","log","searchMovies","searchQuery","searchMovieDetails","searchMovieReviews","searchGenres","titleOptimizer","title","dateOptimizer","releaseDate","firstDate","slice","path","findGenres","genres","genreIds","genresArray","id","item","find","genre","undefined","push","join","movieDetailsGenres"],"sourceRoot":""}
{"version":3,"file":"static/js/278.dcfcf835.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.tsx","components/services/API.tsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.tsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const LoaderContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 100000;\r\n`;\r\n","import { ColorRing } from 'react-loader-spinner';\r\nimport { LoaderContainer } from './Loader.styled';\r\n\r\nexport const Loader: React.FunctionComponent = () => {\r\n  return (\r\n    <LoaderContainer>\r\n      <ColorRing\r\n        visible={true}\r\n        height=\"80\"\r\n        width=\"80\"\r\n        ariaLabel=\"blocks-loading\"\r\n        wrapperStyle={{}}\r\n        wrapperClass=\"blocks-wrapper\"\r\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n      />\r\n    </LoaderContainer>\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport { IGenre } from '../../types';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst KEY = '9d6e6ee2eca71a277d41288e53d88a97';\r\n\r\nexport class SearchMoviesAPI<T extends string, U extends number> {\r\n  searchTrendingMovies = async (page: T) => {\r\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovies = async (page: U, searchQuery: T) => {\r\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovieDetails = async (movieId: T) => {\r\n    const url = `movie/${movieId}?api_key=${KEY}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  searchMovieCredits = async (movieId: T | undefined) => {\r\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\r\n    if (typeof movieId === 'string') {\r\n      try {\r\n        const response = await axios.get(url);\r\n        return response;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  searchMovieReviews = async (movieId: T | undefined) => {\r\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\r\n    if (typeof movieId === 'string') {\r\n      try {\r\n        const response = await axios.get(url);\r\n        return response;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  searchGenres = async () => {\r\n    const url = `genre/movie/list?api_key=${KEY}`;\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function titleOptimizer(title: string, name: string) {\r\n  if (title) {\r\n    return title;\r\n  }\r\n\r\n  if (name) {\r\n    return name;\r\n  }\r\n\r\n  return 'The best film in your life! :)';\r\n}\r\n\r\nexport function dateOptimizer(releaseDate: string, firstDate: string) {\r\n  if (releaseDate) {\r\n    return releaseDate.slice(0, 4);\r\n  }\r\n\r\n  if (firstDate) {\r\n    return firstDate.slice(0, 4);\r\n  }\r\n\r\n  return 'Coming soon! :)';\r\n}\r\n\r\nexport function picturePathPlace(path: string) {\r\n  if (path == null) {\r\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\r\n  }\r\n\r\n  return `https://image.tmdb.org/t/p/w500${path}`;\r\n}\r\n\r\nexport function findGenres(genres: IGenre[], genreIds: number[]) {\r\n  const genresArray = [];\r\n\r\n  if (!genreIds) {\r\n    return 'Other';\r\n  }\r\n\r\n  for (let id of genreIds) {\r\n    let item = genres.find(genre => genre.id === id);\r\n    if (item === undefined) {\r\n      continue;\r\n    } else {\r\n      genresArray.push(item.name);\r\n    }\r\n  }\r\n\r\n  if (genresArray.length === 0) {\r\n    genresArray.push('Other');\r\n  }\r\n\r\n  if (genresArray.length > 3) {\r\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\r\n  }\r\n\r\n  return genresArray.join(', ');\r\n}\r\n\r\nexport function movieDetailsGenres(genres: IGenre[]) {\r\n  const genresArray = [];\r\n\r\n  for (let genre of genres) {\r\n    genresArray.push(genre.name);\r\n  }\r\n\r\n  if (genresArray.length === 0) {\r\n    return 'Other';\r\n  }\r\n\r\n  if (genresArray.length > 3) {\r\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\r\n  }\r\n\r\n  return genresArray.join(', ');\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  position: sticky;\r\n  z-index: 10000;\r\n  top: 100px;\r\n  left: 48px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  padding: 8px 16px;\r\n  border-radius: 5px;\r\n  border: 1px solid #000;\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  background-color: #fff;\r\n\r\n  :hover {\r\n    color: orangered;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { HiArrowLeft } from 'react-icons/hi';\r\nimport { StyledLink } from './BackLink.styled';\r\n\r\nexport const BackLink: React.FunctionComponent<{\r\n  to: string;\r\n  children?: React.ReactNode;\r\n}> = ({ to, children }) => {\r\n  return (\r\n    <StyledLink to={to}>\r\n      <HiArrowLeft size=\"24\" />\r\n      {children}\r\n    </StyledLink>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const MovieDetailsContainer = styled.div`\r\n  margin-top: 14px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  max-width: calc(100% - 96px);\r\n`;\r\n\r\nexport const MovieWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 32px;\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nexport const MovieDetailsImage = styled.div`\r\n  height: 600px;\r\n`;\r\n\r\nexport const MovieDetailsWrapper = styled.div`\r\n  width: 60%;\r\n  max-width: 800px;\r\n`;\r\n\r\nexport const MovieDetailsInfo = styled.div``;\r\n\r\nexport const MovieDetailsTitle = styled.h2`\r\n  font-size: 32px;\r\n  margin-bottom: 18px;\r\n`;\r\n\r\nexport const MovieDetailsSubsectionTitle = styled.h3`\r\n  margin-top: 26px;\r\n  margin-bottom: 16px;\r\n  font-size: 24px;\r\n`;\r\n\r\nexport const MovieDetailsText = styled.p`\r\n  font-size: 18px;\r\n  margin-bottom: 12px;\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport const MovieDetailsTextModifier = styled.span`\r\n  color: orangered;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const MovieDetailsList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  gap: 18px;\r\n`;\r\n\r\nexport const MovieDetailsListItem = styled.li`\r\n  font-size: 28px;\r\n  text-decoration: underline;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    color: orangered;\r\n  }\r\n`;\r\n","import { useState, Suspense, useEffect } from 'react';\r\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n  movieDetailsGenres,\r\n  picturePathPlace,\r\n  SearchMoviesAPI,\r\n} from '../../components/services/API';\r\n\r\nimport { Loader } from '../../components/Loader/Loader';\r\nimport { BackLink } from '../../components/BackLink/BackLink';\r\n\r\nimport {\r\n  MovieDetailsContainer,\r\n  MovieDetailsImage,\r\n  MovieDetailsInfo,\r\n  MovieDetailsTitle,\r\n  MovieDetailsText,\r\n  MovieDetailsSubsectionTitle,\r\n  MovieDetailsTextModifier,\r\n  MovieDetailsList,\r\n  MovieDetailsListItem,\r\n  MovieDetailsWrapper,\r\n  MovieWrapper,\r\n} from './MovieDetails.styled';\r\nimport { IGenre } from '../../types';\r\n\r\ninterface IMovieParams {\r\n  title: string;\r\n  poster_path: string;\r\n  vote_average: number;\r\n  vote_count: number;\r\n  overview: string;\r\n  genres: IGenre[];\r\n}\r\n\r\nconst MoviesAPI = new SearchMoviesAPI();\r\n\r\nexport const MovieDetails: React.FunctionComponent = () => {\r\n  const [movieDetails, setMovieDetails] = useState<IMovieParams | null>(null);\r\n  const { movieId } = useParams<{ movieId: string }>();\r\n  const location = useLocation();\r\n  const backLinkHref: string = location.state?.from ?? '/';\r\n\r\n  useEffect(() => {\r\n    if (typeof movieId !== 'undefined') {\r\n      MoviesAPI.searchMovieDetails(movieId).then(response =>\r\n        setMovieDetails(response!.data)\r\n      );\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {movieDetails && (\r\n        <div>\r\n          <BackLink to={backLinkHref}>Back</BackLink>\r\n          <MovieDetailsContainer>\r\n            <MovieWrapper>\r\n              <MovieDetailsImage>\r\n                <img\r\n                  src={picturePathPlace(movieDetails.poster_path)}\r\n                  alt={movieDetails.title}\r\n                />\r\n              </MovieDetailsImage>\r\n              <MovieDetailsWrapper>\r\n                <MovieDetailsInfo>\r\n                  <MovieDetailsTitle>{movieDetails.title}</MovieDetailsTitle>\r\n                  <MovieDetailsText>\r\n                    Movie rating:{' '}\r\n                    <MovieDetailsTextModifier>\r\n                      {movieDetails.vote_average.toFixed(1)}\r\n                    </MovieDetailsTextModifier>\r\n                  </MovieDetailsText>\r\n                  <MovieDetailsText>\r\n                    Votes:{' '}\r\n                    <MovieDetailsTextModifier>\r\n                      {movieDetails.vote_count}\r\n                    </MovieDetailsTextModifier>\r\n                  </MovieDetailsText>\r\n                  <div>\r\n                    <MovieDetailsSubsectionTitle>\r\n                      Overview\r\n                    </MovieDetailsSubsectionTitle>\r\n                    <MovieDetailsText>{movieDetails.overview}</MovieDetailsText>\r\n                  </div>\r\n                  <div>\r\n                    <MovieDetailsSubsectionTitle>\r\n                      Genres\r\n                    </MovieDetailsSubsectionTitle>\r\n                    <MovieDetailsText>\r\n                      {movieDetailsGenres(movieDetails.genres)}\r\n                    </MovieDetailsText>\r\n                  </div>\r\n                </MovieDetailsInfo>\r\n                <MovieDetailsList>\r\n                  <MovieDetailsListItem>\r\n                    <Link to=\"cast\" state={{ from: backLinkHref }}>\r\n                      Cast\r\n                    </Link>\r\n                  </MovieDetailsListItem>\r\n                  <MovieDetailsListItem>\r\n                    <Link to=\"reviews\" state={{ from: backLinkHref }}>\r\n                      Reviews\r\n                    </Link>\r\n                  </MovieDetailsListItem>\r\n                </MovieDetailsList>\r\n              </MovieDetailsWrapper>\r\n            </MovieWrapper>\r\n            <Suspense fallback={<Loader />}>\r\n              <Outlet />\r\n            </Suspense>\r\n          </MovieDetailsContainer>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"names":["LoaderContainer","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","axios","KEY","SearchMoviesAPI","searchTrendingMovies","page","url","response","console","log","searchMovies","searchQuery","searchMovieDetails","movieId","searchMovieCredits","searchMovieReviews","searchGenres","titleOptimizer","title","name","dateOptimizer","releaseDate","firstDate","slice","picturePathPlace","path","findGenres","genres","genreIds","genresArray","id","item","find","genre","undefined","push","length","join","movieDetailsGenres","StyledLink","Link","BackLink","to","children","size","MovieDetailsContainer","MovieWrapper","MovieDetailsImage","MovieDetailsWrapper","MovieDetailsInfo","MovieDetailsTitle","MovieDetailsSubsectionTitle","MovieDetailsText","MovieDetailsTextModifier","MovieDetailsList","MovieDetailsListItem","MoviesAPI","MovieDetails","useState","movieDetails","setMovieDetails","useParams","backLinkHref","useLocation","state","from","useEffect","then","data","src","poster_path","alt","vote_average","toFixed","vote_count","overview","Suspense","fallback"],"sourceRoot":""}